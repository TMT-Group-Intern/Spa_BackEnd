[
  {
    "ContainingType": "Spa.Api.Controllers.AppointmentController",
    "Method": "GetAll",
    "RelativePath": "api/Appointment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "idBrand",
        "Type": "System.Int64",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.AppointmentController",
    "Method": "Add",
    "RelativePath": "api/Appointment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "appointmentCreateDto",
        "Type": "Spa.Application.Models.CreateAppointmentDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.AppointmentController",
    "Method": "GetAppointmentById",
    "RelativePath": "api/Appointment/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.AppointmentController",
    "Method": "updateAppointmentWithoutService",
    "RelativePath": "api/Appointment/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "updateAppointmentWithoutServiceDTO",
        "Type": "Spa.Application.Models.UpdateAppointmentWithoutServiceDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.AppointmentController",
    "Method": "DeleteAppointmentById",
    "RelativePath": "api/Appointment/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.AppointmentController",
    "Method": "updateAppointmentWithService",
    "RelativePath": "api/Appointment/api/UpdateAppointmentWithService/{id}/{status}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "serviceID",
        "Type": "System.Collections.Generic.List\u00601[[System.Int64, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.AppointmentController",
    "Method": "UpdateDiscount",
    "RelativePath": "api/Appointment/UpdateDiscount",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": false
      },
      {
        "Name": "perDiscount",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.AppointmentController",
    "Method": "updateStatus",
    "RelativePath": "api/Appointment/updatestatus/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.AuthenticationController",
    "Method": "Login",
    "RelativePath": "api/Authentication/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "Spa.Application.Models.LoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.AuthenticationController",
    "Method": "CreateUser",
    "RelativePath": "api/Authentication/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userDto",
        "Type": "Spa.Application.Models.UserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.AuthenticationControllerTest",
    "Method": "Login",
    "RelativePath": "api/AuthenticationControllerTest/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "Spa.Application.Models.LoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.AuthenticationControllerTest",
    "Method": "Register",
    "RelativePath": "api/AuthenticationControllerTest/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userDto",
        "Type": "Spa.Application.Models.UserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.AuthenticationControllerTest",
    "Method": "Register2",
    "RelativePath": "api/AuthenticationControllerTest/register2",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userDTO",
        "Type": "Spa.Application.Models.UserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.CustomersController",
    "Method": "GetAll",
    "RelativePath": "api/Customers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.CustomersController",
    "Method": "CreateCustomer",
    "RelativePath": "api/Customers",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerDto",
        "Type": "Spa.Application.Models.CustomerDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.CustomersController",
    "Method": "UpdateCustomer",
    "RelativePath": "api/Customers/{customerId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerId",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "customerDto",
        "Type": "Spa.Application.Models.CustomerDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.CustomersController",
    "Method": "DeactivateCustomer",
    "RelativePath": "api/Customers/{customerId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.CustomersController",
    "Method": "GetCusomerById",
    "RelativePath": "api/Customers/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.CustomersController",
    "Method": "SearchCustomers",
    "RelativePath": "api/Customers/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "searchTerm",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Spa.Domain.Entities.Customer, Spa.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Spa.Api.Controllers.CustomersController",
    "Method": "UploadImage",
    "RelativePath": "api/Customers/upload",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.PaymentController",
    "Method": "AddPayment",
    "RelativePath": "api/Payment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Int64",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.PaymentController",
    "Method": "ExportExelPayment",
    "RelativePath": "api/Payment/ExportExel",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "branchID",
        "Type": "System.Int64",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.ServicesController",
    "Method": "GetAll",
    "RelativePath": "api/Services",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.ServicesController",
    "Method": "CreateService",
    "RelativePath": "api/Services",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "serviceDto",
        "Type": "Spa.Application.Models.ServiceDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.ServicesController",
    "Method": "GetServiceById",
    "RelativePath": "api/Services/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.ServicesController",
    "Method": "DeleteService",
    "RelativePath": "api/Services/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.ServicesController",
    "Method": "UpdateService",
    "RelativePath": "api/Services/{serviceId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "serviceId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "serviceDto",
        "Type": "Spa.Application.Models.ServiceDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.UserController",
    "Method": "GetAllUsers",
    "RelativePath": "api/User",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.UserController",
    "Method": "GetUserByEmail",
    "RelativePath": "api/User/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User/{email}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "Spa.Application.Models.UpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.UserController",
    "Method": "DeleteUser",
    "RelativePath": "api/User/{email}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.AppointmentController",
    "Method": "GetAllByBranch",
    "RelativePath": "GetAllByBranch",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "idBrand",
        "Type": "System.Int64",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.AppointmentController",
    "Method": "GetAllByStatus",
    "RelativePath": "GetAppointmentByStatus",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "idBrand",
        "Type": "System.Int64",
        "IsRequired": false
      },
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.CustomersController",
    "Method": "GetHistoryCustomerById",
    "RelativePath": "GetHistory",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cutomerId",
        "Type": "System.Int64",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.PaymentController",
    "Method": "GetPaymentByBranch",
    "RelativePath": "GetPaymentByBranch",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "branchID",
        "Type": "System.Int64",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Spa.Api.Controllers.PaymentController",
    "Method": "GetPaymentByDay",
    "RelativePath": "GetRevenueToday",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  }
]